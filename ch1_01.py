"""

Python语言编写的100个算法实例。
这些实例大体上按照“问题描述→问题分析→算法设计→确定程序框架→程序编码实现→运行结果→问题拓展”的流程进行讲解

算法的五个特性：有穷性、确定性、可行性、输入和输出

计算机算法可分为两大类，即数值计算算法和非数值计算算法。
数值计算算法的目的是求解数值，例如求方程的根；
非数值计算算法主要用于处理事务领域的问题，如排序、查找等。


1.1 抓交通肇事犯
1．问题描述
一辆卡车违反交通规则，撞人后逃跑。现场有三人目击该事件，但
都没有记住车号，只记下了车号的一些特征。甲说：牌照的前两位数字
是相同的；乙说：牌照的后两位数字是相同的，但与前两位不同；丙是
数学家，他说：4位的车号刚好是一个整数的平方。请根据以上线索求
出车号。



"""

# 法1：
#
# if __name__=="__main__":
#     # i代表前两位车牌号数字，j代表后两位车牌号的数字，k代表车牌号
#     for i in range(10):
#         for j in range(10): # 穷举前两位和后两位车牌数字
#             # 判断前两位和后两位数字是否相同
#             if i != j:
#                 # 组成4位车牌号码
#                 k = 1000 * i + 100 * i + 10 * j + j
#                 # 判断k是否是某个数的平方，是就输出
#                 for temp in range(31, 100):
#                     if temp * temp == k:
#                         print("车牌号为: ", k)


# 法2：
if __name__=="__main__":
    # i代表前两位车牌号的数字，j代表后两位车牌号的数字，k代表车牌号
    flog = 0 # 循环标识变量，为1时退出所有循环
    for i in range(10):
        if flog:
            break
        for j in range(10): # 穷举前两位和后两位车牌数字
            if flog:
                break
            # 判断前两位和后两位数字是否相同
            if i != j:
                # 组成4位车牌号码
                k = 1000 * i + 100 * i + 10 * j + j
                # 判断k是否是某个数的平方，是就输出
                for temp in range(31, 100):
                    if temp * temp == k:
                        print("车牌号为: ", k)
                        flog = 1
                        break




